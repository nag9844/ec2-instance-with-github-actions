name: EC2 Instance Management

on:
  workflow_dispatch:  # Allows manual triggering
    inputs:
      action:
        description: 'Choose action'
        required: true
        type: choice
        options:
        - launch_ec2_instance
        - terminate_ec2_instance
      ami_id:
        description: 'AMI ID to use (only for launch_ec2_instance)'
        required: false
        default: 'ami-084568db4383264d4'
      instance_type:
        description: 'Instance type (only for launch_ec2_instance)'
        required: false
        default: 't2.micro'
      key_name:
        description: 'Key pair name (only for launch_ec2_instance)'
        required: false
        default: 'demo-key'
      instance_filter:
        description: 'Filter for termination (GitHubEC2)'
        required: false
        default: ''
        type: string  
        
permissions:
  id-token: write
  contents: read

jobs:
  create-instance:
    if: ${{ github.event.inputs.action == 'launch_ec2_instance' }}
    runs-on: ubuntu-latest
    outputs:
      instance_ids: ${{ steps.create.outputs.instance_ids }}

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::199570228070:role/oidc-demo-role
        aws-region: us-east-1


    - name: Launch EC2 Instance
      if: ${{ github.event.inputs.options == 'launch_ec2_instance' }}
      id: create
      run: |
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ${{ github.event.inputs.ami_id }} \
          --instance-type ${{ github.event.inputs.instance_type }} \
          --key-name ${{ github.event.inputs.key_name }} \
          --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=GitHubEC2}]' \
          --query 'Instances[0].InstanceId' \
          --output text)
        echo "Launched instance: $INSTANCE_ID"
        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

  delete-instance:
    if: ${{ github.event.inputs.action == 'terminate_ec2_instance' }}
    runs-on: ubuntu-latest    
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::199570228070:role/oidc-demo-role
        aws-region: us-east-1

    - name: Find Instances to Terminate
      id: find-instances
      run: |
        INSTANCE_IDS=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=${{ github.event.inputs.instance_filter }}" \
                    "Name=instance-state-name,Values=running" \
          --query 'Reservations[].Instances[].InstanceId' \
          --output text)
        
        if [ -z "$INSTANCE_IDS" ]; then
          echo "No instances found with filter: ${{ github.event.inputs.instance_filter }}"
          exit 1
        fi
        
        echo "Found instances: $INSTANCE_IDS"
        echo "instance_ids=$INSTANCE_IDS" >> $GITHUB_OUTPUT

    - name: Terminate EC2 Instances
      run: |
        aws ec2 terminate-instances \
          --instance-ids ${{ steps.find-instances.outputs.instance_ids }}
        echo "Terminated instances: ${{ steps.find-instances.outputs.instance_ids }}"
